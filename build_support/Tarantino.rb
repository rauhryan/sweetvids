require 'erb'
#TARANTINO = "lib\\tarantino\\Tarantino.DatabaseManager.Console.exe"
class Tarantino
	def self.manageSQLDatabase(args)
		@dbname = args.fetch(:dbname, '')
		@dbserver = args.fetch(:dbserver, 'localhost')
		@action = args.fetch(:action, '')
		@scriptdir = args.fetch(:scriptdir, '')
		
		Dir.mkdir @scriptdir unless exists?(@scriptdir)
		
		#NOTE: TARANTINO is defined in the main rakefile.rb
		system("#{TARANTINO} #{@action} #{@dbserver} #{@dbname} #{@scriptdir}") 
		
	end
	
	def self.NextMigration(args)
		@scriptdir = args.fetch(:scriptdir, '')
		@scriptdir = @scriptdir + '\\update'
		
		Dir.mkdir @scriptdir unless exists?(@scriptdir)
		
		contains = Dir.new(@scriptdir).entries
		lastfile =  contains[contains.length-1]		
		counter = 1
		
		if contains.length > 2 then
			counter = Float(lastfile[0,4])
			counter += 1

			if counter % 2 == 0 then
				counter +=1
			end
		
		end
		return "%04d" % counter
	end
	
	def self.CompareDatabases(args)
		@dbname = args.fetch(:dbname, '')
		@dbserver = args.fetch(:dbserver, 'localhost')
		@scriptdir = args.fetch(:scriptdir, '')
		
		Dir.mkdir @scriptdir unless exists?(@scriptdir)
	
	if File.file?("#{@scriptdir}\\_New_Script.sql") then
		FileUtils.rm("#{@scriptdir}\\_New_Script.sql")
	end
		migrationScriptName = Tarantino.NextMigration( :scriptdir => @scriptdir) + '_AutoGeneratedMigration.sql'
	
		#@scriptdir = @scriptdir + '\\update'
		@nextscript = args.fetch(:nextscript, '')
	
		@redgate = ""
		if File.file?( 'c:\program files (x86)\red gate\SQL Compare 8\SQLCompare.exe' ) then
			@redgate = 'c:\program files (x86)\red gate\SQL Compare 8\SQLCompare.exe'
		end
		
		if File.file?( 'c:\program files\red gate\SQL Compare 8\SQLCompare.exe' ) then
			@redgate = 'c:\program files\red gate\SQL Compare 8\SQLCompare.exe'
		end
		
		params = "/f /v /server1:#{@dbserver} /server2:#{@dbserver} /database1:#{@dbname} /database2:#{@dbname}Versioned /scriptfile:#{@scriptdir}\\_New_Script.sql /exclude:Table:usd_AppliedDatabaseScript"
		
		#puts "#{@redgate} #{params}"
		system("#{@redgate} #{params}")
		
		if File.file?("#{@scriptdir}\\_New_Script.sql") then
			puts "Moving Migration scrpit"
			FileUtils.mv("#{@scriptdir}\\_New_Script.sql", "#{@scriptdir}\\#{migrationScriptName}")
			puts "Created Migration File #{@scriptdir}\\#{migrationScriptName}"
		else
			puts ""
			puts "--------------------------------------------"
			puts "No Migration Required"
		end
	
	end
end
